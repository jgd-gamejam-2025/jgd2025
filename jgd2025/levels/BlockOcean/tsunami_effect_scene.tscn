[gd_scene load_steps=3 format=3 uid="uid://drs2dopw28xup"]

[sub_resource type="GDScript" id="GDScript_bmh5l"]
script/source = "extends AnimatableBody3D

# 这些值应该与 OceanBlock 中的对应值相似，或者根据效果调整
@export var drop_height: float = 5.0
@export var drop_duration: float = 0.3
@export var surge_rise_duration: float = 1.0
@export var stay_at_peak_duration: float = 2.0 # 在最高点停留多久

var original_global_position: Vector3
var current_tween: Tween
@onready var mesh_instance: MeshInstance3D = $MeshInstance3D
# @onready var collision_shape = $CollisionShape3D # 如果有碰撞体

func _ready():
	# 记录初始位置 (Manager 设置 global_position 后)
	original_global_position = self.global_position

	# 确保材质允许透明
	if mesh_instance and mesh_instance.get_active_material(0):
		var mat: StandardMaterial3D = mesh_instance.get_active_material(0).duplicate()
		mat.transparency = BaseMaterial3D.TRANSPARENCY_ALPHA
		mesh_instance.set_surface_override_material(0, mat)
	else:
		print_rich(\"[color=yellow]警告：[/color] TsunamiEffect 找不到 MeshInstance3D 或其材质。\")


# 这个方法由 OceanManager 调用
func drop_and_surge(surge_height: float):
	if current_tween: current_tween.kill()

	# (可选：暂时禁用碰撞，如果需要)
	# if collision_shape: collision_shape.set_disabled(true)

	# 1. 创建“坠落”动画
	current_tween = create_tween()
	var drop_target_global_pos = original_global_position - Vector3(0, drop_height, 0)
	var parallel_drop = current_tween.set_parallel(true)
	parallel_drop.tween_property(self, \"global_position\", drop_target_global_pos, drop_duration).set_ease(Tween.EASE_IN)
	if mesh_instance:
		parallel_drop.tween_property(mesh_instance, \"transparency\", 1.0, drop_duration) # Fade out

	# 2. 坠落动画完成后，执行“升起”动画
	current_tween.finished.connect(func():
		current_tween = create_tween() # 创建新的Tween
		var surge_target_global_pos = original_global_position + Vector3(0, surge_height, 0)
		var parallel_surge = current_tween.set_parallel(true)
		parallel_surge.tween_property(self, \"global_position\", surge_target_global_pos, surge_rise_duration).set_ease(Tween.EASE_OUT)
		if mesh_instance:
			parallel_surge.tween_property(mesh_instance, \"transparency\", 0.0, surge_rise_duration * 0.5) # Fade in faster

		# 3. 升起动画完成后，等待一段时间，然后自我销毁
		current_tween.finished.connect(func():
			# 创建一个延迟计时器
			get_tree().create_timer(stay_at_peak_duration).timeout.connect(queue_free)
		)
	)
"

[sub_resource type="BoxMesh" id="BoxMesh_bmh5l"]
size = Vector3(1, 15, 1)

[node name="TsunamiEffectScene" type="AnimatableBody3D"]
script = SubResource("GDScript_bmh5l")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("BoxMesh_bmh5l")
